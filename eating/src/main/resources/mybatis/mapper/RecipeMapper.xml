<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.eat.dao.RecipeDAO">

    <insert id="insertRecipe" parameterType="com.eat.vo.RecipeVO" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into recipe(name, thumb, ingredient, people, recommend, createDate)
        values(#{name}, #{thumb},#{ingredient},#{people},#{recommend},#{createDate})
    </insert>

    <select id="selectOne" parameterType="Long" resultType="com.eat.vo.RecipeVO">
    SELECT * FROM recipe WHERE id = #{id}
    </select>

    <select id="selectAll" resultType="RecipeVO">
        SELECT * FROM recipe
    </select>

    <select id="selectName" parameterType="String" resultType="com.eat.vo.RecipeVO">
        SELECT * FROM recipe WHERE name like CONCAT('%',#{name},'%')
    </select>

    <select id="selectPeople" parameterType="String" resultType="com.eat.vo.RecipeVO">
        SELECT * FROM recipe WHERE people =#{people}
    </select>

    <select id="selectIngredient" parameterType="String" resultType="com.eat.vo.RecipeVO">
        SELECT * FROM recipe WHERE ingredient like CONCAT('%',#{ingredient},'%')
    </select>

    <select id="selectCategoryId" parameterType="Long" resultType="com.eat.vo.RecipeVO">
        SELECT * FROM recipe WHERE categoryid = #{categoryId}
    </select>

    <select id="selectMemberId" parameterType="Long" resultType="com.eat.vo.RecipeVO">
        SELECT * FROM recipe WHERE memberid = #{memberId}
    </select>

<!--    좋아요를 눌렀는지 체크 : recommend + recipe해서 memberId를 보내고 받은 memberId가 reciperecommend에 있는경우 recipeVO를 반환-->
    <select id="recommendCheck" parameterType="Long" resultType="com.eat.vo.RecipeVO">
        SELECT * from reciperecommend as rr
        right join recipe as r
        on
        r.id = rr.recipeId
        where rr.memberid = #{memberId} and rr.recipeid = #{recipeId}
    </select>

    <select id="recipeBookmark" parameterType="Long" resultType="com.eat.vo.RecipeVO">
        SELECT * FROM recipebookmark as rb
        right join recipe as r
        on
        r.id = rb.recipeId
        where rb.memberid = #{memberId} and rb.recipeid = #{recipeId}
    </select>

<!--    좋아요는 추가 // 북마크 insert 필요-->
    <update id="addRecommend" parameterType="Long">
        UPDATE recipe SET recommend = recommend + 1
        WHERE id =#{id}
    </update>

    <update id="removeRecommend" parameterType="Long">
        UPDATE recipe SET recommend = recommend -1
        WHERE id = #{id}
    </update>

    <insert id="insertRecipeBookmark" parameterType="Long" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into recipe_bookmark(recipeId, memberId)
        values(#{recipeId}, #{memberId})
    </insert>

    <delete id="deleteRecipeBookmark" parameterType="Long">
        DELETE FROM recipe_bookmark WHERE memberId =#{memberId} and recipeId = #{recipeId}
    </delete>


    <update id="updateRecipe" parameterType="com.eat.vo.RecipeVO">
        UPDATE recipe SET name =#{name}, thumb =#{thumb}, ingredient=#{ingredient}, people=#{people},modifydate=now()
        WHERE id =#{id}
    </update>

    <delete id="deleteRecipe" parameterType="Long">
        DELETE FROM recipe WHERE id =#{id}
    </delete>
    
    		<!-- 관리자 음식점 삭제 -->
	<delete id="adminRecipedelete" parameterType="java.util.List">    
		DELETE FROM recipe
		WHERE
		<foreach collection="id" item="id" open="" close=""
			separator="or">
			(id = #{id})
		</foreach>
	</delete>


</mapper>